microstrain_inertial_driver:
  ros__parameters:
    # You should change this section of config to match your setup
    port : '/dev/ttyUSB2'
    baudrate : 115200

    # This will cause the node to convert any NED measurements to ENU
    # This will also cause the node to convert any vehicle frame measurements to the ROS definition of a vehicle frame
    use_enu_frame : True

    # Configure some frame IDs
    frame_id : 'gx5_25'  # Frame ID of all of the filter messages. Represents the location of the CV7-INS in the tf tree

    # Disable the transform from the mount to frame id transform as it will be handled in the launch file
    publish_mount_to_frame_id_transform : True

    # ******************************************************************
    # Frame ID Settings
    # ******************************************************************

    # The mode in which we will publish transforms to the below frame IDs
    #     0 - No transforms will be published between any of the non static frame ids. (if publish_mount_to_frame_id_transform is true, it will still be published, and so will the antenna and odometer transforms)
    #     1 - Global mode:
    #             Transform will be published from earth_frame_id to target_frame_id containing global position
    #     2 - Relative mode:
    #             Note: In order to use relative mode, you must configure filter_relative_position
    #             Transform will be published from earth_frame_id to map_frame_id using relative position configuration
    #             Transform between map_frame_id and target_frame_id will be published using position information reported by the device
    # for more information, see: https://wiki.ros.org/microstrain_inertial_driver/transforms
    tf_mode : 0

    # Frame ID that most header.frame_id fields will be populated with.
    frame_id: "gx5"

    # Frame IDs determining the transforms published by this node to aid in navigation. See https://www.ros.org/reps/rep-0105.html
    # Note: If use_enu_frame is false, these frames (with the exception of earth_frame_id) will automatically have "_ned" appended to them.
    mount_frame_id     : "base_link"  # Frame ID that the device is mounted on.

    # Target frame ID to publish transform to. Note that there needs to be some path of transforms between this and frame_id
    #     If tf_mode is set to 1, a transform between earth_frame_id and target_frame_id will be published
    #     If tf_mode is set to 2, a transform between map_frame_id and target_frame_id will be published
    target_frame_id : "base_link"

    # Static transform between mount_frame_id and frame_id.
    # Note: It is recommended to define this in a urdf file if you are building a robot, or are able to modify the robot's description.
    publish_mount_to_frame_id_transform  : True
    mount_to_frame_id_transform          : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0] # [ x, y, z, qi, qj, qk, qw ]